// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String     @id
  name  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  applications ApplicationRole[]
}

model Application {
  id Int @id @default(autoincrement())
  clientId String @unique @default(uuid())
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  roles ApplicationRole[]
  events Event[]
  applicationEvents ApplicationEvent[]
  secrets ClientSecret[]
}

model ApplicationRole {
  user User @relation(fields: [userId], references: [id])
  userId String
  application Application @relation(fields: [applicationId], references: [id], onDelete: Cascade)
  applicationId Int
  role String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([userId, applicationId])
}

model ApplicationEvent {
  id Int @id @default(autoincrement())
  event String
  applicationId Int
  application Application @relation(fields: [applicationId], references: [id], onDelete: Cascade)
  events Event[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Event {
  id Int @id @default(autoincrement())
  applicationId Int 
  application Application @relation(fields: [applicationId], references: [id], onDelete: Cascade)
  applicationEventId Int 
  applicationEvent ApplicationEvent @relation(fields: [applicationEventId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ClientSecret {
  id Int @id @default(autoincrement())
  secret String @unique
  name String
  applicationId Int
  application Application @relation(fields: [applicationId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}